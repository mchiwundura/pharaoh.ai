import { motion } from "framer-motion";
import React, { useEffect, useState } from "react";
import InView from "react-intersection-observer";
import { motionItem, motionText } from "../../lib/motionVariants";

const ProjectsSection = (props: any) => {
	const [loaded, setLoaded] = useState(false);
	useEffect(() => {
		setLoaded(true);
	}, []);
	const Projects = [
		{
			title: "Overkill Todo App",
			images: "overkill_todo_app",
			description:
				"A Fine example of Over-engieering what was supposed to be a simple to-do app to learn nextjs turined out to be every new developers dream to make the next million dollar to-do app",
		},
		{
			title: "Juicy Kotas",
			images: "juicy_kotas",
			description:
				"A page for a Local Restaraunt in Grahamstown which basically was made with nextjs and the menu items dynamically generated by a database made using prisma hosted on Supabase",
		},
		{
			title: "The Bread Basket",
			images: "bread_basket",
			description:
				"A passion project of mine, I wanted to make an online store to sell beloved Zimbabwean goods to South Africa using nextjs frontend and python django backed",
		},
	];

	const devices = [
		{ device: "macbook" },
		{ device: "ipad" },
		{ device: "imac" },
		{ device: "iphone" },
	];

	const [currentProject, setCurrentProject] = useState({
		title: "Overkill todo",
		description:
			"A Fine example of Over-engieering what was supposed to be a simple to-do app to learn nextjs turined out to be every new developers dream to make the next million dollar to-do app",
	});
	return (
		<section className='relative w-full md:w-10/12'>
			<div className=' md:w-[50%] pb-10 md:pl-0 pl-[10vw] w-full md:h-screen h-1/3 sticky z-10 top-12 md:top-0 left-0 flex-col flex justify-center bg-[#303030] '>
				<motion.h1
					variants={motionText}
					initial={"hidden"}
					whileInView={"show"}
					viewport={{ once: true }}
					className='text-white text-6xl md:text-[96px] my-6  font-extrabold  '
				>
					Projects
				</motion.h1>
				<motion.h2
					className='md:text-6xl text-3xl origin-bottom relative font-bold text-white'
					viewport={{ once: true }}
					variants={motionItem}
					initial={"hidden"}
					whileInView={"show"}
					transition={{ duration: 0.5, delay: 0 }}
				>
					{currentProject.title}
				</motion.h2>
				<motion.p
					className='text-md text-white md:w-1/2 w-10/12 md:mt-8'
					viewport={{ once: true }}
					variants={motionItem}
					initial={"hidden"}
					whileInView={"show"}
					transition={{ duration: 0.5, delay: 0.3 }}
				>
					{currentProject.description}
				</motion.p>
				<motion.div
					className='flex mt-5 items-center'
					viewport={{ once: true }}
					variants={motionItem}
					initial={"hidden"}
					whileInView={"show"}
					transition={{ duration: 0.5, delay: 0.6 }}
				>
					<motion.button
						whileTap={{ scale: 0.9 }}
						className='p-2 mr-5 w-fit text-md text-blue-300 border-2 border-blue-300 '
					>
						View Project
					</motion.button>
					<a className='text-md mt-1 text-blue-300'>View All Projects</a>
				</motion.div>
			</div>
			<div className='md:w-4/12  w-full relative md:left-[50%] flex justify-center -top-96 '>
				<div className='flex flex-col w-11/12 items-center'>
					{Projects.map((x, y) => (
						<div key={y} className='mb-32'>
							{loaded &&
								devices.map((a, b) => (
									<InView
										key={b}
										as={"div"}
										threshold={1}
										onChange={() => setCurrentProject(x)}
									>
										<motion.div
											whileInView={{ scale: 1, opacity: 1 }}
											initial={{ scale: 0.5, opacity: 0 }}
											transition={{ duration: 0.7, delay: 0 }}
											className='py-36 w-96 h-96'
										>
											{/* eslint-disable-next-line @next/next/no-img-element */}
											<img
												src={`/projects/mockups/${x.images}_${a.device}.png`}
												width={500}
												height={500}
												alt={`/projects/mockups/${x.images}_${a}.png`}
											/>
										</motion.div>
									</InView>
								))}
						</div>
					))}
				</div>
			</div>
		</section>
	);
};

export default ProjectsSection;
